# -*- coding: utf-8 -*-
"""InfluencerInstaDec2022

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1XsBgR7rLJcX6PKTFpXoeS5M61n92XUBz

## Business Understanding

Analysis influencer tiktok

## Data Understanding
---


* Rank
* Tiktoker name
* Tiktok name
* followers
* views(avg)
* likes(avg.)
* comments(avg.)
* shares(avg.)

### Download dataset
"""

# install kaggle package

!pip install kaggle

# create folder

!mkdir ~/.kaggle

!cp kaggle.json ~/.kaggle

!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d ramjasmaurya/top-1000-social-media-channels

!unzip /content/top-1000-social-media-channels.zip

"""## Data preparation"""

# import libraries

import pandas as pd
import seaborn as sns
sns.set_style('darkgrid')

# load data

df = pd.read_csv('/content/social media influencers-INSTAGRAM - -DEC 2022.csv')

# display head data

df.head()

"""### Handling duplicates"""

# change columns name

df = df.rename(columns={'name': 'username',
                        'instagram name' : 'name',
                        'Category_1' : 'segment1',
                        'Category_2' : 'segment2',
                        'Eng. (Auth.)' : 'engagement_auth',
                        'Eng. (Avg.)': 'engagament_avg'})

# Check for duplicates

number_duplicates = df.duplicated(subset='username').sum()

# Print number of duplicates

print('Print number of duplicates rows: ', number_duplicates)

# Drop duplicates

df.drop_duplicates(subset='username', inplace=True)

# Print number rows after remove duplicates

print('Print number of duplicates rows after remove: ', len(df))

"""### Data Type Convertion"""

# define function remove and convert

def remove_and_convert(value):
  if isinstance(value,str):
    if 'M' in value:
      value = float(value.replace('M','')) * 1000000
    elif 'K' in value:
      value = float(value.replace('K','')) * 1000
    else:
      value = float(value)
  return value

df.columns

# remove and convert

df['followers'] = df['followers'].apply(remove_and_convert)
df['engagement_auth'] = df['engagement_auth'].apply(remove_and_convert)
df['engagament_avg'] = df['engagament_avg'].apply(remove_and_convert)

# check data type

df.dtypes

"""### Fix Data Structure"""

cols = ['username', 'name', 'segment1', 'followers',
       'country', 'engagement_auth', 'engagament_avg']

df = df[cols]

# # add engagement_rate

# df['engagement_rate'] = ((df['views']+df['likes']+df['comments']+df['shares']) / df['followers']) * 100

df = df.sort_values(by='engagament_avg', ascending=False, ignore_index=True )

"""### Handling missing value"""

# check null

df.isnull().sum()

# drop null

df = df.dropna()

# check after drop

df.isnull().sum()

df.to_csv('influencerinsta22.csv', index=False)